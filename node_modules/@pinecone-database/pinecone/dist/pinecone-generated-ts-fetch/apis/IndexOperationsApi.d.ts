/**
 * Pinecone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CollectionMeta, CreateCollectionRequest, CreateRequest, IndexMeta, PatchRequest } from '../models';
export interface ConfigureIndexRequest {
    indexName: string;
    patchRequest?: PatchRequest;
}
export interface CreateCollectionOperationRequest {
    createCollectionRequest?: CreateCollectionRequest;
}
export interface CreateIndexRequest {
    createRequest?: CreateRequest;
}
export interface DeleteCollectionRequest {
    collectionName: string;
}
export interface DeleteIndexRequest {
    indexName: string;
}
export interface DescribeCollectionRequest {
    collectionName: string;
}
export interface DescribeIndexRequest {
    indexName: string;
}
/**
 * IndexOperationsApi - interface
 *
 * @export
 * @interface IndexOperationsApiInterface
 */
export interface IndexOperationsApiInterface {
    /**
     * This operation specifies the pod type and number of replicas for an index.
     * @param {string} indexName The name of the index
     * @param {PatchRequest} [patchRequest] The desired pod type and replica configuration for the index.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IndexOperationsApiInterface
     */
    configureIndexRaw(requestParameters: ConfigureIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * This operation specifies the pod type and number of replicas for an index.
     */
    configureIndex(requestParameters: ConfigureIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
    /**
     * This operation creates a Pinecone collection.
     * @param {CreateCollectionRequest} [createCollectionRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IndexOperationsApiInterface
     */
    createCollectionRaw(requestParameters: CreateCollectionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * This operation creates a Pinecone collection.
     */
    createCollection(requestParameters: CreateCollectionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
    /**
     * This operation creates a Pinecone index. You can use it to specify the measure of similarity, the dimension of vectors to be stored in the index, the numbers of shards and replicas to use, and more.
     * @param {CreateRequest} [createRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IndexOperationsApiInterface
     */
    createIndexRaw(requestParameters: CreateIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * This operation creates a Pinecone index. You can use it to specify the measure of similarity, the dimension of vectors to be stored in the index, the numbers of shards and replicas to use, and more.
     */
    createIndex(requestParameters: CreateIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
    /**
     * This operation deletes an existing collection.
     * @param {string} collectionName The name of the collection
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IndexOperationsApiInterface
     */
    deleteCollectionRaw(requestParameters: DeleteCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * This operation deletes an existing collection.
     */
    deleteCollection(requestParameters: DeleteCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
    /**
     * This operation deletes an existing index.
     * @param {string} indexName The name of the index
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IndexOperationsApiInterface
     */
    deleteIndexRaw(requestParameters: DeleteIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * This operation deletes an existing index.
     */
    deleteIndex(requestParameters: DeleteIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
    /**
     * Get a description of a collection.
     * @param {string} collectionName The name of the collection
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IndexOperationsApiInterface
     */
    describeCollectionRaw(requestParameters: DescribeCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionMeta>>;
    /**
     * Get a description of a collection.
     */
    describeCollection(requestParameters: DescribeCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionMeta>;
    /**
     * Get a description of an index.
     * @param {string} indexName The name of the index
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IndexOperationsApiInterface
     */
    describeIndexRaw(requestParameters: DescribeIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IndexMeta>>;
    /**
     * Get a description of an index.
     */
    describeIndex(requestParameters: DescribeIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IndexMeta>;
    /**
     * This operation returns a list of your Pinecone collections.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IndexOperationsApiInterface
     */
    listCollectionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<string>>>;
    /**
     * This operation returns a list of your Pinecone collections.
     */
    listCollections(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<string>>;
    /**
     * This operation returns a list of your Pinecone indexes.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IndexOperationsApiInterface
     */
    listIndexesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<string>>>;
    /**
     * This operation returns a list of your Pinecone indexes.
     */
    listIndexes(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<string>>;
}
/**
 *
 */
export declare class IndexOperationsApi extends runtime.BaseAPI implements IndexOperationsApiInterface {
    /**
     * This operation specifies the pod type and number of replicas for an index.
     */
    configureIndexRaw(requestParameters: ConfigureIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * This operation specifies the pod type and number of replicas for an index.
     */
    configureIndex(requestParameters: ConfigureIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
    /**
     * This operation creates a Pinecone collection.
     */
    createCollectionRaw(requestParameters: CreateCollectionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * This operation creates a Pinecone collection.
     */
    createCollection(requestParameters?: CreateCollectionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
    /**
     * This operation creates a Pinecone index. You can use it to specify the measure of similarity, the dimension of vectors to be stored in the index, the numbers of shards and replicas to use, and more.
     */
    createIndexRaw(requestParameters: CreateIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * This operation creates a Pinecone index. You can use it to specify the measure of similarity, the dimension of vectors to be stored in the index, the numbers of shards and replicas to use, and more.
     */
    createIndex(requestParameters?: CreateIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
    /**
     * This operation deletes an existing collection.
     */
    deleteCollectionRaw(requestParameters: DeleteCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * This operation deletes an existing collection.
     */
    deleteCollection(requestParameters: DeleteCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
    /**
     * This operation deletes an existing index.
     */
    deleteIndexRaw(requestParameters: DeleteIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * This operation deletes an existing index.
     */
    deleteIndex(requestParameters: DeleteIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
    /**
     * Get a description of a collection.
     */
    describeCollectionRaw(requestParameters: DescribeCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionMeta>>;
    /**
     * Get a description of a collection.
     */
    describeCollection(requestParameters: DescribeCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionMeta>;
    /**
     * Get a description of an index.
     */
    describeIndexRaw(requestParameters: DescribeIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IndexMeta>>;
    /**
     * Get a description of an index.
     */
    describeIndex(requestParameters: DescribeIndexRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IndexMeta>;
    /**
     * This operation returns a list of your Pinecone collections.
     */
    listCollectionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<string>>>;
    /**
     * This operation returns a list of your Pinecone collections.
     */
    listCollections(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<string>>;
    /**
     * This operation returns a list of your Pinecone indexes.
     */
    listIndexesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<string>>>;
    /**
     * This operation returns a list of your Pinecone indexes.
     */
    listIndexes(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<string>>;
}
